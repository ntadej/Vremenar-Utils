[tool.poetry]
name = "vremenar_utils"
version = "0.4.0"
description = ""
authors = ["Tadej Novak <tadej@tano.si>"]

[tool.poetry.dependencies]
python = "^3.10"
Babel = "^2.11.0"
firebase-admin = "^6.0.1"
geopandas = "^0.12.1"
httpx = "^0.23.1"
lxml = "^4.9.1"
parsel = "^1.7.0"
redis = {extras = ["hiredis"], version = "^4.4.2"}
Shapely = "^1.8.5"
typer = {extras = ["all"], version = "^0.7.0"}
wheel = "^0.38.4"
xmltodict = "^0.13.0"

[tool.poetry.scripts]
vremenar_utils = 'vremenar_utils.cli:application'

[tool.poetry.group.dev.dependencies]
black = "^22.10.0"
coverage = {extras = ["toml"], version = "^6.5.0"}
flake8 = "^6.0.0"
flake8-bugbear = "^22.10.27"
flake8-docstrings = "^1.6.0"
flake8-pyproject = "^1.2.1"
mypy = "^0.991"
pep8-naming = "^0.13.2"
pre-commit = "^2.20.0"
pre-commit-hooks = "^4.4.0"
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
pytest-forked = "^1.4.0"
pyupgrade = "^3.2.2"
types-babel = "^2.11.0.7"
types-python-dateutil = "^2.8.19.4"
types-redis = "^4.3.21.5"

[tool.black]
line-length = 88
target-version = ['py310', 'py311']
include = '\.pyi?$'
skip-string-normalization = true
exclude = '''
/(
    \.eggs
  | \.git
  | \.mypy_cache
  | \.venv
)/
'''

[tool.coverage.run]
branch = true
source = ["src/vremenar_utils"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "if self.debug:",
  "if debug:",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
]
ignore_errors = true
omit = [
  "src/vremenar_utils/tests/*",
  "tests/*",
]

[tool.flake8]
 select = ["B", "C", "D", "E", "F", "N", "Q", "T", "W"]
 ignore = ["E203", "W503"]
 max-line-length = 88

 [tool.mypy]
 check_untyped_defs = true
 disallow_any_generics = true
 disallow_incomplete_defs = true
 disallow_subclassing_any = true
 disallow_untyped_calls = true
 disallow_untyped_decorators = true
 disallow_untyped_defs = true
 no_implicit_optional = true
 no_implicit_reexport = true
 pretty = true
 show_column_numbers = true
 show_error_codes = true
 show_error_context = true
 strict_equality = true
 warn_redundant_casts = true
 warn_return_any = true
 warn_unreachable = true
 warn_unused_configs = true
 warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--ignore=src/vremenar/tests/ --cov=vremenar_utils --cov-config=.coveragerc --cov-report=term-missing:skip-covered --cov-report xml --cov-report html:coverage"
testpaths = [
  "tests",
]

[build-system]
 requires = ["poetry-core>=1.2.0"]
 build-backend = "poetry.core.masonry.api"
