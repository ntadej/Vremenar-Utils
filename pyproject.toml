[tool.poetry]
name = "vremenar_utils"
version = "0.4.0"
description = ""
authors = ["Tadej Novak <tadej@tano.si>"]

[tool.poetry.dependencies]
python = "^3.11"
Babel = "^2.12.1"
firebase-admin = "^6.2.0"
geopandas = "^0.14.0"
httpx = "^0.25.0"
lxml = "^4.9.3"
parsel = "^1.8.1"
python-crontab = "^3.0.0"
pyyaml = "^6.0.1"
redis = { extras = ["hiredis"], version = "^5.0.0" }
rich = "^13.5.3"
Shapely = "^2.0.1"
typer = { extras = ["all"], version = "^0.9.0" }
wheel = "^0.41.2"
xmltodict = "^0.13.0"

[tool.poetry.scripts]
vremenar_utils = 'vremenar_utils.cli:application'

[tool.poetry.group.dev.dependencies]
black = "^23.9.1"
coverage = { extras = ["toml"], version = "^7.3.1" }
gevent = "^23.9.1"
mypy = "^1.5.1"
pre-commit = "^3.4.0"
pre-commit-hooks = "^4.4.0"
pytest = "^7.4.2"
pytest-cov = "^4.1.0"
pytest-forked = "^1.6.0"
ruff = "~0.0.291"
types-python-crontab = "^3.0.0.1"
types-python-dateutil = "^2.8.19.14"
types-pyyaml = "^6.0.12.11"
types-redis = "^4.6.0.7"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
skip-string-normalization = true
exclude = '''
/(
    \.eggs
  | \.git
  | \.mypy_cache
  | \.venv
)/
'''

[tool.coverage.run]
branch = true
source = ["src/vremenar_utils"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "if self.debug:",
  "if debug:",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "__repr__",
]
ignore_errors = true
omit = ["src/vremenar_utils/tests/*", "tests/*"]

[tool.ruff]
target-version = "py311"
select = [
  "F",     # pyflakes
  "E",     # pycodestyle
  "W",     # pycodestyle
  "C90",   # mccabe (complexity)
  "I",     # isort
  "N",     # pep8-naming
  "D",     # pydocstyle
  "UP",    # pyupgrade
  "YTT",   # flake8-2020
  "ANN",   # flake8-annotations
  "ASYNC", # flake8-async
  "FBT",   # flake8-boolean-trap
  "B",     # flake8-bugbear
  "A",     # flake8-builtins
  "COM",   # flake8-commas
  "C4",    # flake8-comprehensions
  "DTZ",   # flake8-datetimez
  "EM",    # flake8-errmsg
  "EXE",   # flake8-executable
  "ISC",   # flake8-implicit-str-concat
  "G",     # flake8-logging-format
  "PIE",   # flake8-pie
  "T20",   # flake8-print
  "PT",    # flake8-pytest-style
  "Q",     # flake8-quotes
  "RET",   # flake8-return
  "SLF",   # flake8-self
  "SIM",   # flake8-simplify
  "TID",   # flake8-tidy-imports
  "TCH",   # flake8-type-checking
  "INT",   # flake8-gettext
  "ARG",   # flake8-unused-arguments
  "PTH",   # flake8-use-pathlib
  "PL",    # pylint
  "TRY",   # tryceratops
  "FLY",   # flynt
  "PERF",  # perflint
  "RUF",   # ruff
]
ignore = [
  "ANN102",  # missing-type-cls (not working for the moment)
  "PLR2004", # magic-value-comparison (not wanted)
  "D203",    # one-blank-line-before-class (conflicting with no-blank-line-before-class)
  "D213",    # multi-line-summary-second-line (conflicting with multi-line-summary-first-line)
  "FBT001",  # boolean-positional-arg-in-function-definition (not wanted)
  "FBT002",  # boolean-default-value-in-function-definition (not wanted)
]
line-length = 88

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
disallow_untyped_globals = true
no_implicit_reexport = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_concatenate = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--ignore=src/vremenar/tests/ --cov=vremenar_utils --cov-config=.coveragerc --cov-report=term-missing:skip-covered --cov-report xml --cov-report html:coverage"
testpaths = ["tests"]

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"
